source("../R/confint.r")
library(summarytools)
# import the sample and assign local var
schoolgirls <- load_schoolgirls()
h <- schoolgirls$Height
head(schoolgirls)
summarytools::descr(schoolgirls, stat = "common")
# histogram of schoolgirl heights
hist(h)
# normal prob plot
qqnorm(h); qqline(h)
tconfint_mean(
a = 0.9,
x = mean(h),
sd = sd(h),
n = length(h)
)
descr(h, stat = "common")
source("../R/load.r")
source("../R/confint.r")
library(summarytools)
# import the sample and assign local var
schoolgirls <- load_schoolgirls()
h <- schoolgirls$Height
head(schoolgirls)
descr(schoolgirls, stat = "common")
# histogram of schoolgirl heights
hist(h)
# normal prob plot
qqnorm(h); qqline(h)
tconfint_mean(
a = 0.9,
x = mean(h),
sd = sd(h),
n = length(h)
)
plot(x = h, y=schoolgirls$Weight)
weight <- schoolgirls$Weight
# histogram of schoolgirl heights
hist(height)
# import the sample and assign local var
schoolgirls <- load_schoolgirls()
height <- schoolgirls$Height
weight <- schoolgirls$Weight
# histogram of schoolgirl heights
hist(height)
plot(height, weight)
# normal prob plot
qqnorm(height); qqline(height)
tconfint_mean(
a = 0.9,
x = mean(height),
sd = sd(height),
n = length(height)
)
# normal prob plot
qqnorm(height, datax = TRUE); qqline(height)
# normal prob plot
qqnorm(height, datax = TRUE); qqline(height, datax = TRUE)
source("../R/load.r")
source("../R/confint.r")
library(summarytools)
# import the sample
skulls <- load_skulls()
# assign local vars
etr <- na.omit(skulls$Etruscans)
ita <- na.omit(skulls$Italians)
head(skulls)
descr(skulls)
descr(skulls, stat = "common")
boxplot(
etr,
ita,
horizontal=TRUE,
names=c("Etruscans", "Italians")
)
source("../R/load.r")
source("../R/confint.r")
library(summarytools)
# import the sample
skulls <- load_skulls()
# assign local vars
etr <- na.omit(skulls$Etruscans)
ita <- na.omit(skulls$Italians)
head(skulls)
descr(skulls, stat = "common")
boxplot(
etr,
ita,
horizontal=TRUE,
names=c("Etruscans", "Italians")
)
source("../R/load.r")
source("../R/confint.r")
library(summarytools)
# import the sample
skulls <- load_skulls()
# assign local vars
etr <- na.omit(skulls$Etruscans)
ita <- na.omit(skulls$Italians)
head(skulls)
descr(skulls, stat = "common")
boxplot(
etr,
ita,
horizontal=TRUE,
names=c("Etruscans", "Italians")
)
# normal prob plot: Etruscan
qqnorm(etr , datax = TRUE); qqline(height, datax = TRUE)
# normal prob plot: Etruscan
qqnorm(etr, datax = TRUE); qqline(etr, datax = TRUE)
# normal prob plot: Italians
qqnorm(ita, datax = TRUE); qqline(ita, datax = TRUE)
# normal prob plot
qqnorm(height, datax = TRUE); qqline(height, datax = TRUE)
source("../R/load.r")
source("../R/confint.r")
library(summarytools)
# import the sample and assign local var
schoolgirls <- load_schoolgirls()
height <- schoolgirls$Height
weight <- schoolgirls$Weight
head(schoolgirls)
descr(schoolgirls, stat = "common")
# histogram of schoolgirl heights
hist(height)
plot(height, weight)
# normal prob plot
qqnorm(height, datax = TRUE); qqline(height, datax = TRUE)
tconfint_mean(
a = 0.9,
x = mean(height),
sd = sd(height),
n = length(height)
)
source("../R/load.r")
source("../R/confint.r")
library(summarytools)
# import the sample and assign local var
schoolgirls <- load_schoolgirls()
height <- schoolgirls$Height
weight <- schoolgirls$Weight
head(schoolgirls)
descr(schoolgirls, stat = "common")
# histogram of schoolgirl heights
hist(height)
# normal prob plot
qqnorm(height, datax = TRUE); qqline(height, datax = TRUE)
tconfint_mean(
a = 0.9,
x = mean(height),
sd = sd(height),
n = length(height)
)
# import the sample
prac_test <- load_practical_test()
# assign local var to ttoal
rt <- prac_test$Total
source("../R/load.r")
library(summarytools)
library(BSDA)
# import the sample
prac_test <- load_practical_test()
# assign local var to ttoal
rt <- prac_test$Total
source("../R/load.r")
library(summarytools)
library(BSDA)
# import the sample
prac_test <- load_practical_test()
# assign local var to ttoal
rt <- prac_test$Total
head(prac_test)
descr(rt, stats = "common")
hist(rt)
qqnorm(rt); qqline(rt)
BSDA::z.test(
x = rt,
mu = 47.1,
sigma.x = sd(rt)
)
BSDA::z.test(
x = rt,
mu = 47.1,
sigma.x = sd(rt),
alternative = "greater"
)
source("../R/load.r")
library(summarytools)
library(BSDA)
# import the sample
prac_test <- load_practical_test()
# assign local var to ttoal
rf <- prac_test$Female
head(prac_test)
head(rt)
source("../R/load.r")
library(summarytools)
library(BSDA)
# import the sample
prac_test <- load_practical_test()
# assign local var to ttoal
rt <- prac_test$Total
head(rt)
descr(rt, stats = "common")
hist(rt)
# normal prob plot
qqnorm(rt); qqline(rt)
BSDA::z.test(
x = rt,
mu = 47.1,
sigma.x = sd(rt)
)
head(rf)
source("../R/load.r")
library(summarytools)
library(BSDA)
# import the sample
prac_test <- load_practical_test()
# assign local var to ttoal
rf <- prac_test$Female
head(rf)
# descritive stats for female
descr(rt, stats = "common")
hist(rt)
source("../R/load.r")
library(summarytools)
library(BSDA)
# import the sample
prac_test <- load_practical_test()
# assign local var to ttoal
rf <- prac_test$Female
head(rf)
# descriptive stats for female
descr(rf, stats = "common")
hist(rf)
BSDA::z.test(
x = rf,
mu = 43.8,
sigma.x = sd(rf)
)
BSDA::z.test(
x = rf,
mu = 43.8,
sigma.x = sd(rf),
alternative = "greater"
)
source("../R/load.r")
library(summarytools)
# import the sample
prac_test <- load_practical_test()
# assign local var to ttoal
rm <- prac_test$Male
source("../R/load.r")
library(summarytools)
# import the sample
prac_test <- load_practical_test()
# assign local var to ttoal
rm <- prac_test$Male
summarytools::descr(rm, stats = "common")
hist(rm)
qqnorm(rm); qqline(rm)
t.test(
x = rm,
mu = 50.7,
sigma.x = sd(rm),
alternative = "greater"
)
source("../R/load.r")
library(summarytools)
darwin <- load_darwin()
View(darwin)
# analysis of difference
# get vector diff = cross-self
diff <- cross - self
# assign local vars
cross <- darwin$Cross
self <- darwin$Self
# analysis of difference
# get vector diff = cross-self
diff <- cross - self
summarytools::descr(diff, stats = "common")
boxplot(diff, horizontal = TRUE)
hist(diff)
boxplot(diff, horizontal = TRUE)
qqnorm(diff); qqline(diff)
t.test(
x = diff,
mu = 0,
sigma.x = sd(diff)
)
t.test(
x = diff,
mu = 0,
sigma.x = sd(diff),
paired = TRUE
)
t.test(
x = diff,
mu = 0,
sigma.x = sd(diff)
)
descr(darwin, stats = "common")
boxplot(cross, self, horizontal = TRUE, names = c("CROSS", "SELF"))
qqnorm(cross); qqline(cross)
qqnorm(self); qqline(self)
qqnorm(self); qqline(self)
qqnorm(cross); qqline(cross)
qqnorm(self); qqline(self)
t.test(
x = cross,
y = self,
paired = TRUE
)
source("../R/load.r")
library(summarytools)
library(BSDA)
prac_test <- load_practical_test()
# import the sample
prac_test <- load_practical_test()
# assign local var to total
rt <- prac_test$Total
source("../R/load.r")
library(summarytools)
library(BSDA)
# import the sample
prac_test <- load_practical_test()
# assign local var to total
rt <- prac_test$Total
(ztest <- prop.test(
x = 68,    # successes
n = 254,   # trials
p = 0.25,  # p0
correct = FALSE,
))
source("../R/load.r")
library(summarytools)
# import the data
movements <- load_movements()
# assign local vars
diff <- movements$
# import the data
movements <- load_movements()
# assign local vars
diff <- movements$Diff
source("../R/load.r")
library(summarytools)
# import the data
movements <- load_movements()
# assign local vars
diff <- movements$Diff
View(ztest)
source("../R/load.r")
library(summarytools)
# import the data
movements <- load_movements()
# assign local vars
diff <- movements$Diff
wilcox.test(
x = movements$Diff
)
head(movements)
descr(diff)
descr(diff, stats = "common")
boxplot(diff)
boxplot(diff, horizontal = TRUE)
wilcox.test(
x = movements$Diff
)
source("../R/load.r")
library(summarytools)
source("../R/load.r")
library(summarytools)
# import the data
lesions <- load_lesions()
# assign local vars
a <- lesions$Alesions
b <- lesions$Blesions
head(lesions)
descr(lesions, stats = "common")
boxplot(a, b, horizontal = TRUE, names = c('A', 'B'))
source("../R/load.r")
library(summarytools)
# import the data
movements <- load_movements()
# assign local vars
diff <- movements$Diff
head(movements)
descr(diff, stats = "common")
boxplot(diff, horizontal = TRUE)
wilcox.test(
x = movements$Diff
)
source("../R/load.r")
library(summarytools)
# import the data
lesions <- load_lesions()
# assign local vars
a <- lesions$Alesions
b <- lesions$Blesions
head(lesions)
descr(lesions, stats = "common")
boxplot(a, b, horizontal = TRUE, names = c('A', 'B'))
wilcox.test(
x = a,
y = b,
alternative = "greater"
)
wilcox.test(
x = a,
y = b,
alternative = "greater",
correct = TRUE
)
wilcox.test(
x = a,
y = b,
alternative = "greater",
correct = FALSE
)
wilcox.test(
x = a,
y = b,
alternative = "less",
correct = FALSE
)
wilcox.test(
x = a,
y = b,
alternative = "greater",
correct = FALSE
)
wilcox.test(
x = a,
y = b,
alternative = "greater"
)
View(lesions)
wilcox.test(
x = a,
y = b,
alternative = "greater",
paired = TRUE
)
# normal probability plot of the differences
qqnorm(a-b); qqline(a-b)
head(dopamine)
source("../R/load.r")
library(summarytools)
dopamine <- load_dopamine()
# assign local var
non_psy <- dopamine$Non.psychotic
psy <- dopamine$Psychotic
head(dopamine)
descr(dopamine, stats = "common", round.digits = 4)
boxplot(
non_psy, psy,
horizontal = TRUE,
names = c('Non Psychotic', 'Psychotic')
)
wilcox.test(
x = psy,
y = non_psy,
alternative = "two.sided",
correct = FALSE   # adjust for ties
)
source("../R/load.r")
library(summarytools)
osa <- load_osa()
# assign local vars
abs <- osa$Absent
pres <- osa$Present
head(osa)
descr(osa, stats = "common")
boxplot(
abs, pres,
horizontal = TRUE,
names = c('Absent', 'Present'))
wilcox.test(x = abs, y = pres, alternative = "less"
)
source("../R/load.r")
library(summarytools)
library(ggplot2)
library(reshape)
goals <- load_uniform_goals()
# assign local vars for easier access
group <- goals$group
obs <- goals$obs
goals
summarytools::descr(
goals,
stats = "common"
)
ggplot(goals, aes(group, obs)) +
geom_col(fill="cornflowerblue") +
ylab("Frequency")
pr <- rep(x = 1/9, length.out = 9)
chisq.test(
x = obs,
p = pr
)
# add expected number of goals
goals$exp <- sum(obs) * pr
# melt columns in long format
mgoals <-melt(goals, id=c("group"))
ggplot(mgoals, aes(group, value, fill = variable)) +
geom_col(position="dodge") +
ylab("Frequency") +
scale_fill_discrete() +
theme_classic()
chisq.test(x = obs, p = pr)
