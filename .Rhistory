install.packages(c("actuar", "backports", "brio", "broom", "callr", "cli", "cpp11", "crayon", "data.table", "dbplyr", "desc", "diffobj", "dplyr", "DT", "e1071", "farver", "fastmap", "forcats", "haven", "highr", "Hmisc", "htmltools", "isoband", "kableExtra", "knitr", "lifecycle", "lubridate", "memoise", "mime", "pbdZMQ", "pillar", "pivottabler", "pkgload", "processx", "promises", "ps", "rappdirs", "remotes", "reprex", "rmarkdown", "RSQLite", "rvest", "shiny", "styler", "testthat", "tibble", "tidyr", "tidyverse", "tinytex", "utf8", "vctrs", "viridis", "viridisLite", "waldo", "withr", "xfun", "xmlparsedata"))
source("src/data.r")
# load the file
plasma <- load("plasma")
source("src/data.r")
# load the file
plasma <- load("plasma")
source("src/data.r")
# load the file
plasma <- load("plasma")
source("src/data.r")
# load the file
plasma <- load("plasma")
source("src/data.r")
# load the file
plasma <- load_plasma()
conc("plasma")
source("src/data.r")
# load the file
plasma <- load_plasma()
conc("plasma")
source("src/data.r")
# load the file
plasma <- load("plasma")
# preview the data
head(plasma)
install.packages(qqplotr)
install.packages("qqplotr")
installed.packages("rtools")
# library import
source("src/data.r")
library(ggplot2)
library(qqplotr)
# load the file
plasma <- load("plasma")
# preview the data
head(plasma)
x <- select(plasma, "Level")
library(deplr)
library(deplyr)
library(dplyr)
# library import
source("src/data.r")
library(ggplot2)
library(qqplotr)
library(dplyr)
# load the file
plasma <- load("plasma")
# preview the data
head(plasma)
x <- select(plasma, "Level")
ggplot(mapping = aes(sample = plasma))
+ stat_qq_point(size = 2,color = "red")
+ xlab("x-axis") + ylab("y-axis")
+ stat_qq_line(color="green")
+ stat_qq_line(color="green")
ggplot(mapping = aes(sample = x))
ggplot(mapping = aes(sample = x)) +
stat_qq_point(size = 2,color = "red") +
stat_qq_line(color="green")
r{x}
`r{x}`
x
ggplot(mapping = aes(sample = x)) +
stat_qq_point(size = 2,color = "red")
x <- pull(plasma, "Level")
x
ggplot(mapping = aes(sample = x)) +
stat_qq_point(size = 2,color = "red")
ggplot(mapping = aes(sample = x)) +
stat_qq_point(size = 2,color = "blue")
ggplot(mapping = aes(sample = x)) +
stat_qq_point(size = 2,color = "blue") +
stat_qq_line(color="green") +
xlab("x-axis") + ylab("y-axis")
ggplot(mapping = aes(sample = x)) +
stat_qq_point(size = 2,color = "black") +
stat_qq_line(color="green") +
xlab("x-axis") + ylab("y-axis")
ggplot(mapping = aes(sample = x)) +
stat_qq_point(size = 2,color = "cornfolwerblue") +
stat_qq_line(color="green") +
xlab("x-axis") + ylab("y-axis")
ggplot(mapping = aes(sample = x)) +
stat_qq_point(size = 2,color = "cornflowerblue") +
stat_qq_line(color="green") +
xlab("x-axis") + ylab("y-axis")
ggplot(mapping = aes(sample = x)) +
stat_qq_point(size = 2, color = "cornflowerblue") +
stat_qq_line(color="firebrick2") +
xlab("x-axis") + ylab("y-axis")
ggplot(mapping = aes(sample = x)) +
stat_qq_point(size = 2, color = "firebrick2") +
stat_qq_line(color="cornflowerblue") +
xlab("x-axis") + ylab("y-axis")
qqline(plasma$Level, col = "steelblue", lwd = 2)
qqnorm(plasma$Level)
qqline(plasma$Level)
qqnorm(plasma$Level) +
qqline(plasma$Level)
qqnorm(plasma$Level)
plot.new()
qqnorm(plasma$Level)
qqline(plasma$Level)
plot.new()
qqnorm(plasma$Level)
qqline(plasma$Level)
qqline(plasma$Level, col = "cornflowerblue")
plot.new()
qqnorm(plasma$Level)
qqline(plasma$Level, col = "cornflowerblue")
help(package="qqplot")
plot.new()
qqnorm(plasma$Level)
qqline(plasma$Level)
p <- ggplot(df, aes(sample = plasma$Level))
x <- plasma$Level
p <- ggplot(df, aes(sample = x))
x <- plasma$Level
p <- ggplot(plasma, aes(sample = "Level"))
p + stat_qq() + stat_qq_line()
x <- pull(plasma, "Level")
p <- ggplot(plasma, aes(sample = x))
p + stat_qq() + stat_qq_line()
# library import
source("src/data.r")
library(ggplot2)
library(qqplotr)
library(dplyr)
# load the file
plasma <- load("plasma")
# preview the data
head(plasma)
x <- pull(plasma, "Level")
p <- ggplot(plasma, aes(sample = x))
p + stat_qq() + stat_qq_line()
ggplot2::
qqnorm(plasma$Level)
qqline(plasma$Level)
